(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{436:function(n,o,t){"use strict";t.r(o);var a=t(2),v=Object(a.a)({},(function(){var n=this,o=n._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("h1",{attrs:{id:"nginx-location-几个符号详解"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#nginx-location-几个符号详解"}},[n._v("#")]),n._v(" nginx location 几个符号详解")]),n._v(" "),o("p",[n._v("在 Nginx 中，location 指令用于匹配请求的 URL，并根据匹配规则进行处理。在 location 配置块中，可以使用一些特殊符号和修饰符来指定匹配规则。以下是几个常用的符号，以及它们的详细解释：")]),n._v(" "),o("ol",[o("li",[o("p",[o("code",[n._v("=")]),n._v(": 精确匹配\n使用 "),o("code",[n._v("=")]),n._v(" 符号，例如 "),o("code",[n._v("location = /path")]),n._v("，表示将只匹配精确路径 "),o("code",[n._v("/path")]),n._v(" 的请求。只有当请求的 URI 与指定的路径完全相同时，才会应用该 location 块。")])]),n._v(" "),o("li",[o("p",[o("code",[n._v("^~")]),n._v(": 前缀匹配\n使用 "),o("code",[n._v("^~")]),n._v(" 符号，例如 "),o("code",[n._v("location ^~ /path")]),n._v("，表示将对以指定路径 "),o("code",[n._v("/path")]),n._v(" 开头的请求进行前缀匹配。当请求的 URI 以指定路径开始时，将应用该 location 块，而不再继续匹配其他 location 块。")])]),n._v(" "),o("li",[o("p",[o("code",[n._v("~")]),n._v(" 和 "),o("code",[n._v("~*")]),n._v(": 正则表达式匹配\n使用 "),o("code",[n._v("~")]),n._v(" 符号，例如 "),o("code",[n._v("location ~ \\.jpg$")]),n._v("，表示将使用正则表达式进行匹配。这里的示例将匹配所有以 "),o("code",[n._v(".jpg")]),n._v(" 结尾的请求。"),o("code",[n._v("~")]),n._v(" 区分大小写，而 "),o("code",[n._v("~*")]),n._v(" 则不区分大小写。")])]),n._v(" "),o("li",[o("p",[o("code",[n._v("/")]),n._v(": 普通前缀匹配\n如果没有使用任何修饰符和特殊符号，例如 "),o("code",[n._v("location /path")]),n._v("，则表示将对以指定路径 "),o("code",[n._v("/path")]),n._v(" 开头的请求进行普通前缀匹配。匹配到的请求将应用该 location 块。")])])]),n._v(" "),o("p",[n._v("除了上述符号外，还可以使用 "),o("code",[n._v("@")]),n._v(" 符号来定义命名 location，例如：")]),n._v(" "),o("div",{staticClass:"language-nginx line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-nginx"}},[o("code",[o("span",{pre:!0,attrs:{class:"token directive"}},[o("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("location")]),n._v(" @mylocation")]),n._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),o("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 匹配规则和处理逻辑")]),n._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[n._v("1")]),o("br"),o("span",{staticClass:"line-number"},[n._v("2")]),o("br"),o("span",{staticClass:"line-number"},[n._v("3")]),o("br")])]),o("p",[n._v("这样可以在其他地方使用指定的名称 "),o("code",[n._v("@mylocation")]),n._v(" 来引用该 location。")]),n._v(" "),o("p",[n._v("这些符号和修饰符提供了不同的匹配方式，可以根据实际需求选择合适的方式来配置 Nginx 的 location 块。")])])}),[],!1,null,null,null);o.default=v.exports}}]);