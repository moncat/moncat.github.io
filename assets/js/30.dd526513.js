(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{447:function(e,o,n){"use strict";n.r(o);var v=n(2),_=Object(v.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"org-springframework-context-annotation-里所有注解详解"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#org-springframework-context-annotation-里所有注解详解"}},[e._v("#")]),e._v(" org.springframework.context.annotation 里所有注解详解")]),e._v(" "),o("p",[e._v("如果你使用springboot搭建项目，以下的注解估计是经常用到的")]),e._v(" "),o("p",[e._v("在"),o("code",[e._v("org.springframework.context.annotation")]),e._v("包中，有许多注解用于配置和定义 Spring 应用程序的组件和行为。以下是这些注解的详细说明：")]),e._v(" "),o("ol",[o("li",[o("p",[o("code",[e._v("@Configuration")]),e._v("：表示一个类用于定义应用程序的配置。通常与"),o("code",[e._v("@Bean")]),e._v("一起使用，用于声明Bean定义。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@ComponentScan")]),e._v("：启用自动扫描，并指定要扫描的包。Spring将在指定的包及其子包中查找带有"),o("code",[e._v("@Component")]),e._v("及其派生注解（如"),o("code",[e._v("@Service")]),e._v("、"),o("code",[e._v("@Repository")]),e._v("和"),o("code",[e._v("@Controller")]),e._v("）的类，并将它们注册为 Bean。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Component")]),e._v("：表示一个类是Spring容器管理的组件。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Bean")]),e._v("：用于定义一个Bean。在"),o("code",[e._v("@Configuration")]),e._v("类中的方法上使用，告诉Spring将该方法的返回值注册为一个Bean。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Autowired")]),e._v("：用于依赖注入。通过类型匹配来查找并自动装配相应的Bean。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Qualifier")]),e._v("：与"),o("code",[e._v("@Autowired")]),e._v("一起使用，提供额外的限定符，以便更准确地指定要注入的Bean。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Primary")]),e._v("：与"),o("code",[e._v("@Autowired")]),e._v("一起使用，指定在发生多个候选Bean时首选的Bean。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Value")]),e._v("：用于注入外部的值或资源到Bean中，可以从属性文件、系统属性或环境变量中获取。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Profile")]),e._v("：指定Bean在特定的Profile下才会被注册和使用。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Lazy")]),e._v("：指示Spring延迟初始化Bean，即在需要时才创建Bean实例。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Scope")]),e._v("：用于定义Bean的作用域，如单例、原型等。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@EnableAspectJAutoProxy")]),e._v("：启用Spring对AspectJ自动代理的支持。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@EnableTransactionManagement")]),e._v("：启用Spring对事务管理的支持。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Import")]),e._v("：用于导入其他配置类或组件类。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@Conditional")]),e._v("：根据条件决定是否创建Bean。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("@DependsOn")]),e._v("：指定Bean之间的依赖关系。")])])]),e._v(" "),o("p",[e._v("这些注解是Spring框架中非常常用的一部分，并提供了各种方式来配置和控制Spring应用程序的行为。通过灵活使用这些注解，可以实现高度可配置和灵活的应用程序开发。")])])}),[],!1,null,null,null);o.default=_.exports}}]);